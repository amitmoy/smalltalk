NonBooleanReceiver: proceed for truth.26 January 2021 2:40:11.843868 pmVM: Win32 - SmalltalkImage: Squeak5.3 [latest update: #19435]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir C:\Users\amitm\Desktop\squeak\allinone\Squeak5.3-19435-64bit-All-in-One.app\Contents\ResourcesTrusted Dir C:\Users\amitm\Desktop\squeak\allinone\Squeak5.3-19435-64bit-All-in-One.app\Contents\Resources\amitmUntrusted Dir C:\Users\amitm\Documents\My SqueakUndefinedObject(Object)>>mustBeBooleanIn:	Receiver: nil	Arguments and temporary variables: 		context: 	WarGame>>mouseDown:		proceedValue: 	nil	Receiver's instance variables: nilUndefinedObject(Object)>>mustBeBoolean	Receiver: nil	Arguments and temporary variables: 	Receiver's instance variables: nilWarGame>>mouseDown:	Receiver: a WarGame(994860)	Arguments and temporary variables: 		anEvent: 	[211@79 mouseDown red ( red ) 325115546]	Receiver's instance variables: 		bounds: 	0@18 corner: 700@418		owner: 	a PasteUpMorph(2434915) [world]		submorphs: 	#()		fullBounds: 	0@18 corner: 700@418		color: 	Color gray		extension: 	a MorphExtension (939074) [other:  (borderStyle -> a BorderStyle)]		activePlayers: 	an OrderedCollection()		playersAtWar: 	nil		deck: 	nil		gameOver: 	nil		mouseIn: 	trueWarGame(Morph)>>handleMouseDown:	Receiver: a WarGame(994860)	Arguments and temporary variables: 		anEvent: 	[211@79 mouseDown red ( red ) 325115546]	Receiver's instance variables: 		bounds: 	0@18 corner: 700@418		owner: 	a PasteUpMorph(2434915) [world]		submorphs: 	#()		fullBounds: 	0@18 corner: 700@418		color: 	Color gray		extension: 	a MorphExtension (939074) [other:  (borderStyle -> a BorderStyle)]		activePlayers: 	an OrderedCollection()		playersAtWar: 	nil		deck: 	nil		gameOver: 	nil		mouseIn: 	trueMouseButtonEvent>>sentTo:	Receiver: [211@79 mouseDown red ( red ) 325115546]	Arguments and temporary variables: 		anObject: 	a WarGame(994860)	Receiver's instance variables: 		timeStamp: 	325115546		source: 	a HandMorph(424978)		type: 	#mouseDown		buttons: 	4		position: 	211@79		handler: 	a WarGame(994860)		wasHandled: 	true		wasIgnored: 	false		whichButton: 	4		nClicks: 	1WarGame(Morph)>>handleEvent:	Receiver: a WarGame(994860)	Arguments and temporary variables: 		anEvent: 	[211@79 mouseDown red ( red ) 325115546]		filteredEvent: 	[211@79 mouseDown red ( red ) 325115546]	Receiver's instance variables: 		bounds: 	0@18 corner: 700@418		owner: 	a PasteUpMorph(2434915) [world]		submorphs: 	#()		fullBounds: 	0@18 corner: 700@418		color: 	Color gray		extension: 	a MorphExtension (939074) [other:  (borderStyle -> a BorderStyle)]		activePlayers: 	an OrderedCollection()		playersAtWar: 	nil		deck: 	nil		gameOver: 	nil		mouseIn: 	trueMorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[211@79 mouseDown red ( red ) 325115546]		aHandler: 	a WarGame(994860)		aMorph: 	a WarGame(994860)		result: 	#rejected		filteredEvent: 	[211@79 mouseDown red ( red ) 325115546]	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:[] in MorphicEventDispatcher>>dispatchMouseDown:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:BlockClosure>>ensure:	Receiver: [closure] in MorphicEventDispatcher>>dispatchMouseDown:with:	Arguments and temporary variables: 		aBlock: 	[closure] in MorphicEventDispatcher>>dispatchMouseDown:with:		complete: 	nil		returnValue: 	nil	Receiver's instance variables: 		outerContext: 	MorphicEventDispatcher>>dispatchMouseDown:with:		startpc: 	166		numArgs: 	0MorphicEventDispatcher>>dispatchMouseDown:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[211@79 mouseDown red ( red ) 325115546]		aMorph: 	a WarGame(994860)		handler: 	a WarGame(994860)		lastHandler: 	a PasteUpMorph(2434915) [world]	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[211@79 mouseDown red ( red ) 325115546]		aMorph: 	a WarGame(994860)	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:WarGame(Morph)>>processEvent:using:	Receiver: a WarGame(994860)	Arguments and temporary variables: 		anEvent: 	[211@79 mouseDown red ( red ) 325115546]		defaultDispatcher: 	a MorphicEventDispatcher		filteredEvent: 	[211@79 mouseDown red ( red ) 325115546]	Receiver's instance variables: 		bounds: 	0@18 corner: 700@418		owner: 	a PasteUpMorph(2434915) [world]		submorphs: 	#()		fullBounds: 	0@18 corner: 700@418		color: 	Color gray		extension: 	a MorphExtension (939074) [other:  (borderStyle -> a BorderStyle)]		activePlayers: 	an OrderedCollection()		playersAtWar: 	nil		deck: 	nil		gameOver: 	nil		mouseIn: 	true[] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:Array(SequenceableCollection)>>do:	Receiver: {a TextMorph(450812) . a PluggableSystemWindow<Workspace>(1005638) . a DockingBarMorph(178...etc...	Arguments and temporary variables: 		aBlock: 	[closure] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:		index: 	5		indexLimiT: 	7	Receiver's instance variables: {a TextMorph(450812) . a PluggableSystemWindow<Workspace>(1005638) . a DockingBarMorph(178...etc...PasteUpMorph(Morph)>>submorphsDo:	Receiver: a PasteUpMorph(2434915) [world]	Arguments and temporary variables: 		aBlock: 	[closure] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:	Receiver's instance variables: 		bounds: 	0@0 corner: 1280@657		owner: 	nil		submorphs: 	{a TextMorph(450812) . a PluggableSystemWindow<Workspace>(1005638) ....etc...		fullBounds: 	0@0 corner: 1280@657		color: 	(Color r: 0.251 g: 0.259 b: 0.267)		extension: 	a MorphExtension (1624648) [eventHandler = an EventHandler]  [other:...etc...		borderWidth: 	0		borderColor: 	(Color r: 0.749 g: 0.741 b: 0.733)		presenter: 	an EtoysPresenter (550400)		model: 	a MorphicModel(2138782)		cursor: 	1		padding: 	3		backgroundMorph: 	nil		turtleTrailsForm: 	nil		turtlePen: 	nil		lastTurtlePositions: 	nil		isPartsBin: 	nil		indicateCursor: 	nil		wantsMouseOverHalos: 	nil		worldState: 	a WorldState		griddingOn: 	nilMorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[211@79 mouseDown red ( red ) 325115546]		aHandler: 	a PasteUpMorph(2434915) [world]		aMorph: 	a PasteUpMorph(2434915) [world]		result: 	nil		filteredEvent: 	nil	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:[] in MorphicEventDispatcher>>dispatchMouseDown:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:BlockClosure>>ensure:	Receiver: [closure] in MorphicEventDispatcher>>dispatchMouseDown:with:	Arguments and temporary variables: 		aBlock: 	[closure] in MorphicEventDispatcher>>dispatchMouseDown:with:		complete: 	nil		returnValue: 	nil	Receiver's instance variables: 		outerContext: 	MorphicEventDispatcher>>dispatchMouseDown:with:		startpc: 	166		numArgs: 	0--- The full stack ---UndefinedObject(Object)>>mustBeBooleanIn:UndefinedObject(Object)>>mustBeBooleanWarGame>>mouseDown:WarGame(Morph)>>handleMouseDown:MouseButtonEvent>>sentTo:WarGame(Morph)>>handleEvent:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:[] in MorphicEventDispatcher>>dispatchMouseDown:with:BlockClosure>>ensure:MorphicEventDispatcher>>dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:with:WarGame(Morph)>>processEvent:using:[] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:Array(SequenceableCollection)>>do:PasteUpMorph(Morph)>>submorphsDo:MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:[] in MorphicEventDispatcher>>dispatchMouseDown:with:BlockClosure>>ensure: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -MorphicEventDispatcher>>dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:with:PasteUpMorph(Morph)>>processEvent:using:[] in PasteUpMorph>>processEvent:using:BlockClosure>>ensure:PasteUpMorph>>processEvent:using:PasteUpMorph(Morph)>>processEvent:[] in [] in [] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:MouseButtonEvent(MorphicEvent)>>becomeActiveDuring:[] in [] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:HandMorph>>becomeActiveDuring:[] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in MorphicProject>>spawnNewProcess[] in BlockClosure>>newProcess